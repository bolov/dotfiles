#!/bin/bash

# navigator
nv() {
    # python file basename (no extension)
    local navigator_py_bn="navigator"
    # python file directory
    local navigator_py_dir="$HOME/.dotfiles/shell"
    # fifo path
    local navigator_cd_fifo="$HOME/.navigator/cd"
    # locations file path
    local navigator_locations="$HOME/.navigator/locations"


    if [ "$1" = "repair" ] ; then
        rm -fv $navigator_cd_fifo
        return 0
    fi

    mkfifo $navigator_cd_fifo

    if [ $? -ne 0 ]; then
        echo Error: cannot create fifo
        echo Make sure that there isn\'t another navigator command running
        echo If there isn\'t, you can safely run \'nv repair\'
        return -1
    fi

    # makes the string representing the arguments passed to python function
    # the arguments passable to a python function
    # e.g. `p1 p2 p3` -> `"p1", "p2", "p3"`
    local args=""
    for i in $@; do
        args+=", \"${i}\""
    done
    local args=${args:2}

    if [ -n "$args" ]; then
        args+=", "
    fi

    # the python command to execute
    # The python file can have an invalid file name (e.g. starting with dot)
    # so it can't just be imported. Needs to be loaded with imp"
    local cmd="
import imp
import os
fp, pathname, description = imp.find_module(\"$navigator_py_bn\",
                                            [\"$navigator_py_dir\"])
navigator = imp.load_module(\"navigator\", fp, pathname, description)
exit(navigator.nv($args cd_fifo_fn=\"$navigator_cd_fifo\",
                  locations_fn=\"$navigator_locations\"))
    "

    run_nv_py() {
        python3 -c "$cmd" || echo "." > $navigator_cd_fifo
    }

    (run_nv_py &)

    unset -f run_nv_py

    new_cd=`cat < $navigator_cd_fifo`

    rm $navigator_cd_fifo

    cd $new_cd
}
